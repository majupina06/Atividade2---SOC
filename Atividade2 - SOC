## üéØ DESAFIOS PR√ÅTICOS

### Desafio 1: An√°lise de Log de Acesso (F√°cil)
*Arquivo*: access.log (formato Apache)

192.168.1.100 - - [25/Dec/2023:10:00:01 +0000] "GET /index.html HTTP/1.1" 200 1234
192.168.1.101 - - [25/Dec/2023:10:00:02 +0000] "POST /login.php HTTP/1.1" 401 0
192.168.1.100 - - [25/Dec/2023:10:00:03 +0000] "GET /admin.php HTTP/1.1" 403 567


*Tarefas*:
1. Extrair apenas os IPs √∫nicos
2. Contar quantas vezes cada IP aparece
3. Listar apenas requisi√ß√µes com erro (4xx, 5xx)
4. Mostrar as 5 p√°ginas mais acessadas

*Solu√ß√£o esperada*:
bash
# 1. IPs √∫nicos
awk '{print $1}' access.log | sort | uniq
Solu√ß√£o: 

# 2. Contagem por IP
awk '{print $1}' access.log | sort | uniq -c | sort -nr

# 3. Requisi√ß√µes com erro
awk '$9 ~ /^[45]/' access.log

# 4. Top 5 p√°ginas
awk '{print $7}' access.log | sort | uniq -c | sort -nr | head -5


---

### Desafio 2: Limpeza de Lista de Senhas (F√°cil)
*Arquivo*: passwords.txt (lista de senhas com duplicatas e espa√ßos)

admin123
password  
ADMIN123
password
 secret 
Password
admin123


*Tarefas*:
1. Remover duplicatas (case-insensitive)
sort passwords.txt 
sort passwords.txt | uniq
2. Remover espa√ßos em branco no in√≠cio e fim
sed -e 's/^[ \t]*//' -e 's/[ \t]*$//' passwords.txt
3. Converter tudo para min√∫sculas
sed -e 's/^[ \t]*//' -e 's/[ \t]*$//' passwords.txt | tr '[:upper:]' '[:lower:]'

4. Mostrar apenas senhas com mais de 6 caracteres
sed 's/^[ \t]*//;s/[ \t]$//' passwords.txt | tr '[:upper:]' '[:lower:]' | sort | uniq | awk 'lenght($0) > 6'
*Solu√ß√£o esperada*:
bash
# Limpar e filtrar senhas
cat passwords.txt | sed 's/^[ \t]*//;s/[ \t]*$//' | tr '[:upper:]' '[:lower:]' | sort | uniq | awk 'length($0) > 6'


---

### Desafio 3: An√°lise de Usu√°rios do Sistema (M√©dio)
*Arquivo*: /etc/passwd

*Tarefas*:
1. Listar usu√°rios com UID >= 1000 (usu√°rios normais)
2. Mostrar apenas username e shell padr√£o
3. Contar quantos usu√°rios usam bash vs outras shells


*Solu√ß√£o esperada*:
bash
# 1. Usu√°rios normais (UID >= 1000)
awk -F: '$3 >= 1000 {print $1, $3}' /etc/passwd

# 2. Username e shell
awk -F: '$3 >= 1000 {print $1, $7}' /etc/passwd

# 3. Contagem por shell
awk -F: '{print $7}' /etc/passwd | sort | uniq -c | sort -nr




---

### Desafio 4: Busca de Configura√ß√µes Sens√≠veis (M√©dio)
*Tarefa*: Encontrar arquivos de configura√ß√£o que podem conter informa√ß√µes sens√≠veis

*Objetivos*:
1. Buscar todos os arquivos .conf e .cfg em /etc
2. Procurar por linhas contendo "password", "secret", "key" (case-insensitive)


*Solu√ß√£o esperada*:
bash
find /etc -name "*.conf" -o -name "*.cfg" | \
xargs grep -i -E "(password|secret|key)" | \
grep -v -E "^\s*[#;]" | \
grep -v "^#"


---

### Dicas
- *Sempre redirecione stderr*: comando 2>/dev/null
- *Use aliases para comandos complexos*: alias logips="awk '{print \$1}' | sort | uniq -c | sort -nr"
- *Combine ferramentas em scripts*: Crie scripts reutiliz√°veis para an√°lises comuns
- *Mantenha one-liners √∫teis*: Documente comandos que funcionam bem


## ‚úÖ Checklist de Avalia√ß√£o

### Aluno deve demonstrar capacidade de:
- [ ] Usar grep com regex para buscar padr√µes em logs
- [ ] Extrair e processar dados com awk
- [ ] Manipular texto com sed
- [ ] Combinar ferramentas em pipelines eficientes
- [ ] Usar xargs para processamento em lote
- [ ] Otimizar comandos para performance
